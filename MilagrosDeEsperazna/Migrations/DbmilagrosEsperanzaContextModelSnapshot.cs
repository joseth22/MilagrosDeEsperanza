// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilagrosDeEsperanza.Models;

#nullable disable

namespace MilagrosDeEsperanza.Migrations
{
    [DbContext(typeof(DbmilagrosEsperanzaContext))]
    partial class DbmilagrosEsperanzaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MilagrosDeEsperanza.Models.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_comentario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComentario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_envio")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mensaje");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdComentario")
                        .HasName("PK__Comentar__1BA6C6F45BF574F2");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.Noticia", b =>
                {
                    b.Property<int>("IdNoticia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_noticia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNoticia"));

                    b.Property<string>("Contenido")
                        .HasColumnType("text")
                        .HasColumnName("contenido");

                    b.Property<DateOnly?>("FechaPublicacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_publicacion");

                    b.Property<string>("Imagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagen");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdNoticia")
                        .HasName("PK__Noticias__1D4A6BA1A6C3FAC4");

                    b.ToTable("Noticias");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.Proyecto", b =>
                {
                    b.Property<int>("IdProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_proyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProyecto"));

                    b.Property<string>("Imagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagen");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("IdProyecto")
                        .HasName("PK__Proyecto__F38AD81D25AA5C4D");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("primer_apellido");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rol");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("segundo_apellido");

                    b.Property<int>("Telefono")
                        .HasColumnType("int")
                        .HasColumnName("telefono");

                    b.HasKey("Email")
                        .HasName("PK__Usuarios__AB6E6165C2EEAE02");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.Voluntario", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("IdVoluntario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_voluntario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVoluntario"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("primer_apellido");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("segundo_apellido");

                    b.Property<int>("Telefono")
                        .HasColumnType("int")
                        .HasColumnName("telefono");

                    b.HasKey("Email")
                        .HasName("PK__Voluntar__AB6E6165572DA4BB");

                    b.ToTable("Voluntarios");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.VoluntariosProyecto", b =>
                {
                    b.Property<int>("IdAsociacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_asociacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsociacion"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("int")
                        .HasColumnName("id_proyecto");

                    b.HasKey("IdAsociacion")
                        .HasName("PK__Voluntar__086AFDE70D2F15A3");

                    b.HasIndex("Email");

                    b.HasIndex("IdProyecto");

                    b.ToTable("VoluntariosProyectos");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.VoluntariosProyecto", b =>
                {
                    b.HasOne("MilagrosDeEsperanza.Models.Voluntario", "EmailNavigation")
                        .WithMany("VoluntariosProyectos")
                        .HasForeignKey("Email")
                        .HasConstraintName("FK__Voluntari__email__44FF419A");

                    b.HasOne("MilagrosDeEsperanza.Models.Proyecto", "IdProyectoNavigation")
                        .WithMany("VoluntariosProyectos")
                        .HasForeignKey("IdProyecto")
                        .HasConstraintName("FK__Voluntari__id_pr__45F365D3");

                    b.Navigation("EmailNavigation");

                    b.Navigation("IdProyectoNavigation");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.Proyecto", b =>
                {
                    b.Navigation("VoluntariosProyectos");
                });

            modelBuilder.Entity("MilagrosDeEsperanza.Models.Voluntario", b =>
                {
                    b.Navigation("VoluntariosProyectos");
                });
#pragma warning restore 612, 618
        }
    }
}
